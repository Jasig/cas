apply plugin: 'war'
apply plugin: 'spring-boot'

description = 'Apereo CAS Web Application'

sourceSets {
    main {
        resources {
            srcDir "${project.buildDir}/generated-src/main/resources"
        }
    }
}

javadoc {
    enabled false
}

war {
    manifest {
        attributes("Implementation-Title": project.name,
                "Implementation-Vendor": project.group,
                "Created-By": project.group,
                "Implementation-Date": java.time.ZonedDateTime.now(),
                "Implementation-Version": project.version)
    }
    from "${project.buildDir}/generated-src/main/resources", { into "WEB-INF/classes" }
}


bootRun {
    dependsOn pathingJar
    doFirst {
        classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
    }
    
    addResources = true
    jvmArgs = ["-Xrunjdwp:transport=dt_socket,address=5000,server=y,suspend=n"]
    systemProperties = System.properties
}

springBoot  {
    mainClass = 'org.apereo.cas.web.CasWebApplication'
}

bootRepackage {
    mainClass = 'org.apereo.cas.web.CasWebApplication'
}

dependencies {
    compile project(':cas-server-core')
    compile project(':cas-server-core-monitor')
    compile project(':cas-server-core-authentication')
    compile project(':cas-server-core-services')
    compile project(':cas-server-core-logout')
    compile project(':cas-server-core-audit')
    compile project(':cas-server-core-logging')
    compile project(':cas-server-core-tickets')
    compile project(':cas-server-core-web')
    compile project(':cas-server-core-validation')
    compile project(':cas-server-core-util')
    compile project(':cas-server-webapp-init')
    compile project(':cas-server-support-throttle')
    compile project(':cas-server-support-actions')
    compile project(':cas-server-support-cookie')
    compile project(':cas-server-support-reports')
    compile project(':cas-server-support-themes')
    compile project(':cas-server-webapp-config')
    compile project(':cas-server-support-validation')

    providedRuntime libraries.springboottomcat
    compile libraries.pac4j
    compile libraries.springcloud
    compile libraries.springboot
    compile libraries.thmyeleaf
    runtime libraries.groovy
    compile libraries.spring
    runtime libraries.cassecurityfilter
    runtime libraries.metrics
    runtime libraries.hibernate
    runtime libraries.bouncycastle
}

uploadArchives.dependsOn bootRepackage  