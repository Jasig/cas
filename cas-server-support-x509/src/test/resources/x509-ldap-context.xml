<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:ldaptive="http://www.ldaptive.org/schema/spring-ext"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       ttp://www.ldaptive.org/schema/spring-ext http://www.ldaptive.org/schema/spring-ext.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="refresh">
                    <bean class="org.springframework.cloud.context.scope.refresh.RefreshScope" />
                </entry>
            </map>
        </property>
    </bean>
    <context:component-scan base-package="org.apereo.cas" />
    <context:annotation-config />

    <context:property-placeholder location="classpath:/ldap.properties"/>

    <bean id="ldapCertFetcher"
          class="org.apereo.cas.adaptors.x509.authentication.handler.support.ldap.LdaptiveResourceCRLFetcher"
          c:connectionConfig-ref="provisioningConnectionConfig"
          c:searchExecutor-ref="searchExecutor"  />

    <bean id="poolingLdapCertFetcher"
          class="org.apereo.cas.adaptors.x509.authentication.handler.support.ldap.PoolingLdaptiveResourceCRLFetcher"
          c:connectionConfig-ref="provisioningConnectionConfig"
          c:searchExecutor-ref="searchExecutor"
          c:connectionPool-ref="connectionPool"/>

    <ldaptive:search-executor id="searchExecutor"
                              baseDn="${ldap.baseDn}"
                              searchFilter="${ldap.searchfilter.cert}"
                              returnAttributes="certificateRevocationList"
                              binaryAttributes="certificateRevocationList" />

    <ldaptive:connection-config connectTimeout="${ldap.connectTimeout}"
                                id="provisioningConnectionConfig"
                                bindDn="${ldap.managerDn}"
                                bindCredential="${ldap.managerPassword}"
                                useStartTLS="${ldap.useStartTLS:false}" />

    <ldaptive:connection-pool id="connectionPool"
                              blockWaitTime="${ldap.pool.blockWaitTime}"
                              prunePeriod="${ldap.pool.prunePeriod}"
                              idleTime="${ldap.pool.idleTime}"
                              maxPoolSize="${ldap.pool.maxSize}"
                              minPoolSize="${ldap.pool.minSize}"
                              failFastInitialize="false"
                              validateOnCheckOut="${ldap.pool.validateOnCheckout}"
                              validatePeriodically="${ldap.pool.validatePeriodically}"
                              validatePeriod="${ldap.pool.validatePeriod}" />


    <bean id="validationAnnotationBeanPostProcessor" class="org.apereo.cas.util.CustomBeanValidationPostProcessor"
          p:afterInitialization="true"/>

    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />
    <util:map id="authenticationHandlersResolvers"/>
    <util:list id="authenticationMetadataPopulators" />
    <alias name="defaultPrincipalFactory" alias="principalFactory" />
    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />
    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />
    <util:list id="monitorsList" />
    <alias name="defaultTicketRegistry" alias="ticketRegistry" />
    <util:map id="uniqueIdGeneratorsMap"/>
    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />

    <util:list id="serviceFactoryList" />
    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />
    <bean id="attributeRepository" class="org.apereo.services.persondir.support.NamedStubPersonAttributeDao"/>
    <alias name="inMemoryServiceRegistryDao" alias="serviceRegistryDao" />
    <alias name="tgcCipherExecutor" alias="defaultCookieCipherExecutor" />

</beans>
