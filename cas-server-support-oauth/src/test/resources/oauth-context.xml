<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="refresh">
                    <bean class="org.springframework.cloud.context.scope.refresh.RefreshScope" />
                </entry>
            </map>
        </property>
    </bean>
    
    <context:property-placeholder location="classpath:cas.properties"
                                  ignore-resource-not-found="true"
                                  ignore-unresolvable="false"/>

    <context:component-scan base-package="org.apereo.cas"/>
    <context:annotation-config/>

    <!-- OAuth View -->
    <alias name="anyAuthenticationPolicy" alias="authenticationPolicy" />
    <util:map id="authenticationHandlersResolvers">
        <entry key-ref="primaryAuthenticationHandler" value-ref="primaryPrincipalResolver" />
    </util:map>
    <bean id="primaryAuthenticationHandler"
          class="org.apereo.cas.authentication.AcceptUsersAuthenticationHandler">
        <property name="users">
            <map>
                <entry key="test" value="test"/>
            </map>
        </property>
    </bean>
    <alias name="personDirectoryPrincipalResolver" alias="primaryPrincipalResolver" />
    <util:list id="authenticationMetadataPopulators" />
    <util:list id="monitorsList" />
    <alias name="defaultTicketRegistry" alias="ticketRegistry" />
    <util:map id="uniqueIdGeneratorsMap"/>
    <alias name="ticketGrantingTicketExpirationPolicy" alias="grantingTicketExpirationPolicy" />

    <util:list id="serviceFactoryList" />
    <alias name="acceptAnyAuthenticationPolicyFactory" alias="authenticationPolicyFactory" />
    <bean id="attributeRepository" class="org.apereo.services.persondir.support.NamedStubPersonAttributeDao"/>
    <alias name="inMemoryServiceRegistryDao" alias="serviceRegistryDao" />
    <bean id="handlerMappingC" class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"/>
    <alias name="defaultPrincipalFactory" alias="principalFactory" />
    <alias name="defaultAuthenticationTransactionManager" alias="authenticationTransactionManager" />
    <alias name="defaultPrincipalElectionStrategy" alias="principalElectionStrategy" />
    <util:list id="inMemoryRegisteredServices">
        <bean class="org.apereo.cas.services.RegexRegisteredService"
              p:id="0" p:name="HTTP and IMAP" p:description="Allows HTTP(S) and IMAP(S) protocols"
              p:serviceId="^(https?|imaps?)://.*" p:evaluationOrder="10000001" >
            <property name="attributeReleasePolicy">
                <bean class="org.apereo.cas.services.ReturnAllAttributeReleasePolicy" />
            </property>
        </bean>
    </util:list>
    <util:list id="validationServiceSelectionStrategies">
        <bean class="org.apereo.cas.support.oauth.validator.OAuth20ValidationServiceSelectionStrategy" />
    </util:list>
</beans>
