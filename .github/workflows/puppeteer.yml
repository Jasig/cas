name: Puppeteer

##########################################################################

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server"
  GRADLE_BUILDCACHE_USER: ${{ secrets.GRADLE_BUILDCACHE_USER }}
  GRADLE_BUILDCACHE_PSW: ${{ secrets.GRADLE_BUILDCACHE_PSW }}
  TERM: xterm-256color
  JDK_CURRENT: 11.0.11
  SCENARIO_REGEX: ".*" # use this to limit which tests run

on:
  push:
    branches: [ master ]
  pull_request:
    types: [ labeled ]
    branches: [ master ]

##########################################################################

jobs:
  cancel-previous-runs:
    if: ${{ (github.event_name == 'push' || contains(github.event.pull_request.labels.*.name, 'CI')) && !contains(github.event.head_commit.message, 'trigger dependency update') && !contains(github.event.head_commit.message, 'documentation update') }}
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  initialize:
    needs: [cancel-previous-runs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'adopt'
      - name: Initialize
        run: ls ./ci && chmod -R 777 ./ci/*.sh && ./ci/init-build.sh

##########################################################################
  
  puppeteer-scenarios:
    needs: [initialize]
    runs-on: ubuntu-latest
    outputs:
      scenarios: ${{ steps.get-scenarios.outputs.scenarios }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'adopt'
      - id: print-scenarios
        run: ./gradlew --build-cache --configure-on-demand --no-daemon -q puppeteerScenarios | jq
      - id: get-scenarios
        run: echo "::set-output name=scenarios::$(./gradlew --build-cache --configure-on-demand --no-daemon -q puppeteerScenarios)]}"

##########################################################################
  puppeteer-tests:
    runs-on: ubuntu-latest
    needs: [puppeteer-scenarios]
    continue-on-error: false
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        scenario: ${{fromJSON(needs.puppeteer-scenarios.outputs.scenarios)}}
    name: ${{matrix.scenario}}
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JDK_CURRENT }}
          distribution: 'adopt'
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh
      - name: Run Tests
        run: ./ci/tests/puppeteer/run.sh $PWD/ci/tests/puppeteer/scenarios/${{matrix.scenario}}
##########################################################################
